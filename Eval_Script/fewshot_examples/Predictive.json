[
{
    "question": "Question: Considering the code snippet variants provided below, which variant would trigger CWE787?",
    "choices": {
        "A": "static int StaticValue = 453;\nvoid updateArrayElement() {\n    int *array;\n    int index;\n    int newValue;\n    array = (int *)malloc(10 * sizeof(int));\n    if (array == NULL) {\n        perror(\"Failed to allocate memory\");\n        exit(EXIT_FAILURE);\n    }\n    for (int i = 0; i < 10; i++) {\n        array[i] = i;\n    }\n    if (StaticValue==713)\n    {\n        printf(\"Enter the index of the element to update (0-%d): \", arraySize - 1);\n        if (scanf(\"%d\", &index) != 1) {\n            fprintf(stderr, \"Invalid input for index.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (scanf(\"%d\", &newValue) != 1) {\n            fprintf(stderr, \"Invalid input for new value.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (index >= 0 && index < arraySize) {\n            array[index] = newValue;\n            printf(\"Array element updated successfully.\n\");\n        } else {\n            printf(\"Error: Index %d is out of bounds. Valid range is 0-%d.\n\", index, arraySize - 1);\n        }    \n    }\n    if (StaticValue==666)\n    {    \n        printf(\"Enter the index of the element to update (0-9): \");\n        scanf(\"%d\", &index);\n        printf(\"Enter the new value: \");\n        scanf(\"%d\", &newValue);    \n        array[index] = newValue;\n    }\n    if (StaticValue == 453)\n    {    \n        printf(\"Enter the index of the element to update (0-9): \");\n        if (scanf(\"%d\", &index) != 1) {\n            fprintf(stderr, \"Invalid input for index.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        printf(\"Enter the new value: \");\n        if (scanf(\"%d\", &newValue) != 1) {\n            fprintf(stderr, \"Invalid input for new value.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (index >= 0 && index < arraySize) {\n            int temp = array[index];\n            temp = newValue;\n            printf(\"Array element updated successfully.\n\", index);\n        } else {\n            printf(\"Error: Index %d is out of bounds. Valid range is 0-9.\n\", index);\n        }\n    }    \n    printf(\"Updated array:\n\");\n    for (int i = 0; i < 10; i++) {\n        printf(\"array[%d] = %d\n\", i, array[i]);\n    }\n    free(array);\n}",
        "B": "static int StaticValue = 666;\nvoid updateArrayElement() {\n    int *array;\n    int index;\n    int newValue;\n    array = (int *)malloc(10 * sizeof(int));\n    if (array == NULL) {\n        perror(\"Failed to allocate memory\");\n        exit(EXIT_FAILURE);\n    }\n    for (int i = 0; i < 10; i++) {\n        array[i] = i;\n    }\n    if (StaticValue==713)\n    {\n        printf(\"Enter the index of the element to update (0-%d): \", arraySize - 1);\n        if (scanf(\"%d\", &index) != 1) {\n            fprintf(stderr, \"Invalid input for index.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (scanf(\"%d\", &newValue) != 1) {\n            fprintf(stderr, \"Invalid input for new value.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (index >= 0 && index < arraySize) {\n            array[index] = newValue;\n            printf(\"Array element updated successfully.\n\");\n        } else {\n            printf(\"Error: Index %d is out of bounds. Valid range is 0-%d.\n\", index, arraySize - 1);\n        }    \n    }\n    if (StaticValue==666)\n    {    \n        printf(\"Enter the index of the element to update (0-9): \");\n        scanf(\"%d\", &index);\n        printf(\"Enter the new value: \");\n        scanf(\"%d\", &newValue);    \n        array[index] = newValue;\n    }\n    if (StaticValue == 453)\n    {    \n        printf(\"Enter the index of the element to update (0-9): \");\n        if (scanf(\"%d\", &index) != 1) {\n            fprintf(stderr, \"Invalid input for index.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        printf(\"Enter the new value: \");\n        if (scanf(\"%d\", &newValue) != 1) {\n            fprintf(stderr, \"Invalid input for new value.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (index >= 0 && index < arraySize) {\n            int temp = array[index];\n            temp = newValue;\n            printf(\"Array element updated successfully.\n\", index);\n        } else {\n            printf(\"Error: Index %d is out of bounds. Valid range is 0-9.\n\", index);\n        }\n    }    \n    printf(\"Updated array:\n\");\n    for (int i = 0; i < 10; i++) {\n        printf(\"array[%d] = %d\n\", i, array[i]);\n    }\n    free(array);\n}",
        "C": "static int StaticValue = 453;\nvoid updateArrayElement() {\n    int *array;\n    int index;\n    int newValue;\n    int arraySize = 10;\n    array = (int *)malloc(arraySize * sizeof(int));\n    if (array == NULL) {\n        perror(\"Failed to allocate memory\");\n        exit(EXIT_FAILURE);\n    }\n    for (int i = 0; i < arraySize; i++) {\n        array[i] = i;\n    }\n    if (StaticValue == 713) {\n        printf(\"Enter the index of the element to update (0-%d): \", arraySize - 1);\n        if (scanf(\"%d\", &index) != 1) {\n            fprintf(stderr, \"Invalid input for index.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (scanf(\"%d\", &newValue) != 1) {\n            fprintf(stderr, \"Invalid input for new value.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        if (index >= 0 && index < arraySize) {\n            array[index] = newValue;\n            printf(\"Array element updated successfully.\n\");\n        } else {\n            printf(\"Error: Index %d is out of bounds. Valid range is 0-%d.\n\", index, arraySize - 1);\n        }\n        free(array);\n    }\n    if (StaticValue == 666) {    \n        printf(\"Enter the index of the element to update (0-9): \");\n        if (scanf(\"%d\", &index) != 1) {\n            fprintf(stderr, \"Invalid input for index.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        printf(\"Enter the new value: \");\n        if (scanf(\"%d\", &newValue) != 1) {\n            fprintf(stderr, \"Invalid input for new value.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        array[index] = newValue;\n        free(array);\n    }\n    if (StaticValue == 453) {    \n        printf(\"Enter the index of the element to update (0-9): \");\n        if (scanf(\"%d\", &index) != 1) {\n            fprintf(stderr, \"Invalid input for index.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        printf(\"Enter the new value: \");\n        if (scanf(\"%d\", &newValue) != 1) {\n            fprintf(stderr, \"Invalid input for new value.\n\");\n            free(array);\n            exit(EXIT_FAILURE);\n        }\n        free(array);\n        if (index >= 0 && index < arraySize) {\n            array[index] = newValue;\n            printf(\"Array element at index %d appears to be updated.\n\", index);\n        } else {\n            printf(\"Error: Index %d is out of bounds. Valid range is 0-9.\n\", index);\n        }\n        printf(\"Updated array:\n\");\n        for (int i = 0; i < arraySize; i++) {\n            printf(\"array[%d] = %d\n\", i, array[i]);\n        }\n    } \n}",
        "D": "None of the variants trigger CWE787."
    },
    "answer": "B",
    "explain": "Based on the selected code snippet variant B, the program introduces newValue into the array without verifying its validity, which triggers CWE-787."
}
]